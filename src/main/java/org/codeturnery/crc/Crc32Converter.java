package org.codeturnery.crc;

import java.util.zip.CRC32;

/**
 * Provides methods to convert CRC checksums into different representations.
 */
public interface Crc32Converter {
	/**
	 * @param crcLong The <code>0 0 0 0 W X Y Z</code> value to be converted.
	 * @return The converted value as <code>W X Y Z</code>.
	 */
	public int crcToMaskableInt(final long crcLong);

	/**
	 * Converts CRC32 checksums provided by ZIP entry headers into a
	 * <code>long</code> value. The returned <code>long</code> value will match
	 * (equals) the <code>long</code> value that is (as well) provided by a ZIP
	 * <a href="https://github.com/srikanth-lingala/zip4j/blob/master/src/main/java/net/lingala/zip4j/model/FileHeader.java">FileHeader</a>.
	 * It also matches (equals) the <code>long</code> value that
	 * would be generated by the {@link CRC32} class if it was given the actual file
	 * content.
	 * 
	 * @param crcBytes The <code>Z Y X W</code> value to be converted.
	 * @return The converted value as <code>0 0 0 0 W X Y Z</code>.
	 */
	public long crcToLong(final byte[] crcBytes);

	/**
	 * Converts the <code>long</code> values of the CRC32 checksums provided by ZIP
	 * <a href="https://github.com/srikanth-lingala/zip4j/blob/master/src/main/java/net/lingala/zip4j/model/FileHeader.java">FileHeader</a>s into their byte array representation, that is provided
	 * (too) by the ZIP <a href="https://github.com/srikanth-lingala/zip4j/blob/master/src/main/java/net/lingala/zip4j/model/FileHeader.java">FileHeader</a>.
	 * 
	 * @param crcLong The <code>0 0 0 0 W X Y Z</code> value to be converted.
	 * @return The converted value as <code>Z Y X W</code>
	 */
	public byte[] crcToBytes(final long crcLong);

	/**
	 * Converts the <code>long</code> values of the CRC32 checksums provided by ZIP
	 * entry headers into an <code>int</code> representation, which internal bytes
	 * match (equals) the bytes that are (as well) provided in the ZIP
	 * <a href="https://github.com/srikanth-lingala/zip4j/blob/master/src/main/java/net/lingala/zip4j/model/FileHeader.java">FileHeader</a>s.
	 * 
	 * @param crcLong The <code>0 0 0 0 W X Y Z</code> value to be converted.
	 * @return The converted value as <code>Z Y X W</code>
	 */
	public int crcToInt(final long crcLong);

	/**
	 * @param crcInt The <code>W X Y Z</code> value to be converted.
	 * @return The converted value as <code>W X Y Z</code>.
	 */
	public byte[] crcToBytes(final int crcInt);

	/**
	 * @param crcInt The <code>Z Y X W</code> value to be converted.
	 * @return The converted value as <code>0 0 0 0 W X Y Z</code>.
	 */
	public long crcToLong(final int crcInt);

	/**
	 * Transforms the given bytes into a {@link String} representation.
	 * 
	 * @param bytes The bytes to transform.
	 * @return The transformed bytes.
	 */
	public StringBuilder toString(final byte[] bytes);

	/**
	 * Transforms the given bytes into a {@link String} representation.
	 * 
	 * @param bytes The bytes to transform.
	 * @return The transformed bytes.
	 */
	public StringBuilder toString(final int bytes);

	/**
	 * Transforms the given bytes into a {@link String} representation.
	 * 
	 * @param bytes The bytes to transform.
	 * @return The transformed bytes.
	 */
	public StringBuilder toString(final long bytes);

}
